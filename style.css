
  @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&family=Sacramento&display=swap');


*{
    margin: 0;
    padding: 0;
    box-sizing: border-box ;
}

:root{
    font-size: 16px; /*usado como referencia*/
}

::-webkit-scrollbar{
    width: 8px;
}
::-webkit-scrollbar-track{
    background-color: #2c2c31;
}
::-webkit-scrollbar-thumb{
    background-color: #9e9ea0;
}

@keyframes entrada{

    from {
        opacity: 0;
        transform: translateY(-200px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }


    /*TESTE
    0%{ background: red;}
    50%{ background: blue;} 
    78%{ opacity: o;}
    100%{ opacity: 1}*/
}


body{
    background-color: #121215;
    color: #eaeaea;

    font-family: 'Roboto', sans-serif;

    display: grid;
    grid-template-areas: "profile timeline"; /*nome das divisoes da grip --- as colums*/
    grid-template-columns: 1fr 1fr; /*mesma divisao para cada coluna*/    
    grid-template-rows: 100vh;
}

nav{
    padding: 64px;
    grid-area: timeline;

    overflow-y: scroll; /*para rolar apenas um lado*/
    animation: entrada 0.7s ease-in-out; /*ENTRADA= nome nado ao keyframe*/
}


.memory{
    display: flex; /*sema flexiveis, e vao um para o lado do outro */
    flex-direction: column;
    gap: 16px; /*espacamento entre eles*/
    text-decoration: none; /*para tirar a linha de "link" dos nomes e foto */
    margin-bottom: 64px;
}

.memory small{ /*assim ele n pega qualque small, e sim o small qu eta dentro na div com class memory*/
    color: #bebebf;
    font-size: 0.75rem; /*pega o valor que queria ex 12 e divide pelo valor root, troca o valor e coloca rem ao inves de px*/

}

.memory h1{
    font-size: 2rem;
}

.memory img{
    width: 100%;
    height: 200px;
    object-fit: cover; /*proporcao de uma capa */
    border-radius: 8px;

    transition: transform o.3s ease-in-out; /*para ampliar a imagem com mais suavidade */
}

.memory div{ /*para a image ficar grande ela vai ficar escondidA */
    width: 100%;
    height: 200px;
    overflow: hidden;
    border-radius: 8px;
}

.memory p{
    font-size: 1.2rem;
    color: #bebebf;
    line-height: 28px ;
}

.memory:hover img{
    transform: scale(1.1);
}

aside{
    grid-area: profile;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 20px;

    border-right: 1px solid;
    
    /*colocanod img por css */
    background-image: url(fotos/Left\ \(1\).png); /*SELECIONANDO A FOTO */
    background-position: top right;
    background-repeat: no-repeat; /*p imagem n repetir */
    background-size: auto 100%; /*p se ajustar melhor*/
}

aside *{ /*selecionando todos os elementos que estao dentro do aside */
    animation: entrada 0.7s ease-in-out;
}

aside img:nth-child(2){ /*p escolher a seg img do aside*/
    height: 160px;
    width: 160px;
    border-radius: 50%;

    border: 4px solid transparent;
    background: linear-gradient(#d39e33, #ed5636, #633bbc) padding-box,
    linear-gradient(260deg, #d39e33, #ed5636, #633bbc) border-box;

   

}

aside p {
    font-size: 2rem;
    text-align: center;

}

aside span{
    font-size: 0.75rem;
    color: #9e9ea0;
}

/*KEYFRAMES controa as etapas em uma sequencia de animação css definindo os estilos para quatro chaves(pontos chaves)*/

@media (max-width: 768px){

    :root{
        font-size: 14px;
    }

    /*quando o atam for ate 768px*/
   body{
    grid-template-columns: 1fr;
    grid-template-rows: 0.2fr 0.8fr;
    grid-template-areas:
    "profile"
    "timeline" ;
   }

   aside {
    border-right: none;
    padding: 32px 12px;
   }

   nav{
    overflow-y: visible;
    padding: 22px;
   }
}